{"version":3,"sources":["../src/background-image.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,KAAA,EAAc,MAAM,eAAA,CAAA;AAGnD;IAUE,kCACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAT/B,eAAU,GAAY,IAAI,CAAA;QAC1B,cAAS,GAAY,IAAI,CAAA;QACzB,WAAM,GAAY,IAAI,CAAA;QACtB,WAAM,GAAW,CAAC,CAAA;IAQnB,CAAC;IAED,2CAAQ,GAAR;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAA;QAExC,IAAI,CAAC,kBAAkB,EAAE,CAAA;QAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAA;IAC9C,CAAC;IAED,qDAAkB,GAAlB,UAAmB,GAAU;QAAV,oBAAA,EAAA,UAAU;QAC3B,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAA;QACxC,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAA;QAE3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;cAC7B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,WAAW;cACpC,WAAW,CAAA;QAEf,EAAE,CAAC,CAAC,GAAG,CAAC;YAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,CAAA;QAEvD,EAAE,CAAC,KAAK,CAAC,eAAe,GAAG,UAAQ,IAAI,CAAC,UAAU,OAAI,CAAA;IACxD,CAAC;IAED,kDAAe,GAAf,UAAgB,EAAE;QAChB,EAAE,CAAC,KAAK,CAAC,cAAc,GAAG,OAAO,CAAA;QACjC,EAAE,CAAC,KAAK,CAAC,kBAAkB,GAAG,QAAQ,CAAA;IACxC,CAAC;IAEI,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,oBAAoB;iBAC/B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,uCAAc,GAA2C;QAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAG,EAAE,EAAE;QAC7C,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;QAC3D,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,mBAAmB,EAAG,EAAE,EAAE;QAC9D,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;QACnD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;QACnD,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,EAAG,EAAE,EAAE;KACzC,CAAC;IACF,+BAAC;CA1DD,AA0DC,IAAA;SA1DY,wBAAwB","file":"background-image.js","sourceRoot":"","sourcesContent":["import {Directive, ElementRef, Input, OnInit} from '@angular/core'\n\n\nexport class BackgroundImageDirective implements OnInit {\n   url\n   server_url: boolean = true\n   pos_cover: boolean = true\n   shadow: boolean = true\n   resize: number = 0\n   ENV\n\n  path_image: string\n\n  constructor(\n    private ElementRef: ElementRef,\n  ) {\n  }\n\n  ngOnInit() {\n    const el = this.ElementRef.nativeElement\n\n    this.SetBackgroundImage()\n\n    if (this.pos_cover) this.SetPositionSize(el)\n  }\n\n  SetBackgroundImage(url = null) {\n    const el = this.ElementRef.nativeElement\n    const url_default = this.url ? this.url : this.ENV.no_image\n\n    this.path_image = this.server_url\n      ? this.ENV.img_url + '/' + url_default\n      : url_default\n\n    if (url) this.path_image = this.ENV.img_url + '/' + url\n\n    el.style.backgroundImage = `url('${this.path_image}')`\n  }\n\n  SetPositionSize(el) {\n    el.style.backgroundSize = 'cover'\n    el.style.backgroundPosition = 'center'\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[background-image]',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input, args: ['bg-url', ] },],\n'server_url': [{ type: Input, args: ['bg-server-url', ] },],\n'pos_cover': [{ type: Input, args: ['bg-position-cover', ] },],\n'shadow': [{ type: Input, args: ['bg-shadow', ] },],\n'resize': [{ type: Input, args: ['bg-resize', ] },],\n'ENV': [{ type: Input, args: ['ENV', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}